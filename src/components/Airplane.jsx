/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/airplane/model.glb 
*/
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";

export function Airplane(props) {
  const { nodes, materials } = useGLTF('models/airplane/model5.glb')

  const helix1 = useRef();
  const helix2 = useRef();
  const helix3 = useRef();
  const fin = useRef();

  useFrame((_state, delta) => {
    helix1.current.rotation.x += delta*2;
    helix2.current.rotation.x += delta*2;
    helix3.current.rotation.x += delta*0.5;
  });

    return (
      <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_2.geometry} material={materials['map_FlyShip_001.001']} position={[-0.138, 0.673, -0.033]} rotation={[-1.58, 0, 1.57]} >
      < meshStandardMaterial color="gold"/>
      </mesh>
      <mesh geometry={nodes.Object_2001.geometry} material={materials['map_FlyShip_001.001']} position={[-1.9, -0.49, -1.646]} rotation={[-1.58, 0, 1.57]} ref={helix1}>
      < meshStandardMaterial color="gold"/>
      </mesh>
      <mesh geometry={nodes.Object_2002.geometry} material={materials['map_FlyShip_001.001']} position={[-1.902, -0.469, 1.68]} rotation={[-1.58, 0, 1.57]} ref={helix2}>
      < meshStandardMaterial color="gold"/>
      </mesh>
      <mesh geometry={nodes.Object_2003.geometry} material={materials['map_FlyShip_001.001']} position={[-2.042, 0.642, 0.005]} rotation={[-1.58, 0, 1.57]} ref={helix3}>
      < meshStandardMaterial color="gold"/>
      </mesh>
    </group>
    )
  }

useGLTF.preload('models/airplane/model5.glb')